@startuml

package "lancercalculs"{
  class LancerCalculsChemins{
    + main(): void
  }
  class LancerCalculsVision{
      + main(): void
  }
  class LancerCalculsDataset{
        + main(): void
  }
}
package "outil"{
    class ChargementCarte{
        + {static} charger(String): int[][]
    }
    class Outil{
      + {static} applatissement(double[][]): double[]
    }
}

package "calculs"{
  class CalculVision{
    + {static} recupererVision(): HashMap<Position,ArrayList<Position>>
    + {static} ecrireVision(): void
    + {static} calculerCarteVision(): HashMap
    + {static} calculerVision(int, int): ArrayList
    + {static} cleanVision(HashMap<Position, ArrayList<Position>>: void
    + {static} parcours(Position, Position, ArrayList<Position>, ArrayList<Position>): boolean
  }
  class CalculChemins {
    - {static} carte : int[][]
    + {static} lirefichier(String): HashMap<List<Position>,Stack>
    + {static} recupererCheminPrisonnier(): HashMap<List<Position>,Stack>
    + {static} recupererCheminGardien(): HashMap<List<Position>,Stack>
    + {static} ecrireChemins(): void
    + {static} calculerChemins(): HashMap<List<Position>,Stack>
    + {static} isValid(int, int, Position): boolean
    + {static} isUnblocked(int[][], int, int, Position): boolean
    + {static} isDestination(Position, Position): boolean
    + {static} calculateHValue(Position, Position): double
    + {static} tracePath(Cell[][], Position): Stack
    + {static} aStarSearch(int[][], int, int, Position, Position): Stack
  }
}


package "main"{
  class Main{
    + main(): void
  }
}


@enduml