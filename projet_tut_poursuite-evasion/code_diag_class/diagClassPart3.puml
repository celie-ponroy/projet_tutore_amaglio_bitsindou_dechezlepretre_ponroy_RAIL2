@startuml

package "lancercalculs"{
  class LancerCalculs{
    + {static} init(): void
    + {static} initSansDS(): void
  }
  class LancerAnalyse{
    - etreFini: boolean
    - nbVictoireGardien: int
    - nbVictoirePrisonnier: int
    - matchNull: int
    - nbIterationCourante: int
    - nbDeplacementPerso: int
    - historiqueDeplacementPerso: List<Integer>
    - casesVisitees: HashMap
    - pause: boolean
    - caseDepart: boolean
    - casesDepartPris: HashMap<Position, Integer>
    - casesDepartGard: HashMap<Position, Integer>
    + LancerAnalyse()
    + lancerAnalyse(int, Comportements, Comportements): void
    - updateCasesVisitees(List<Position>): void
    + etreFini(): boolean
    + getNbVictoireGardien(): int
    + getNbVictoirePrisonnier(): int
    + getMatchNull(): int
    + getNbIterationCourante(): int
    + getNbDeplacementPerso(int): int
    + getHistoriqueDeplacementPrisonnier(): List<Integer>
    + getCasesVisitees(): HashMap<Position, Integer>
    + setNbIterationsTotal(int): void
    + getCasesDepartGard(): HashMap<Position, Integer>
    + getCasesDepartPris(): HashMap<Position, Integer>
    + reinitialiser(): void
    + isPause()
  }
  class LancerCalculsChemins{
    + main(): void
  }
  class LancerCalculsVision{
      + main(): void
  }
  class LancerCalculsDataset{
        + launch(): void
  }
}
package "outil"{
    class ChargementCarte{
        + {static} charger(String): int[][]
    }
    class Outil{
      + {static} applatissement(double[][]): double[]
      + {static} afficherTab(double[] tab): void
    }
    class DataCollector{
        + {static} saveData(double[], double, double, int): void
        + {static} etiquettage(String): void
    }
    class CSVDataset{
        - {final} csvRecords: List<CSVRecord>
        + CSVDataset(Builder)
        + get(NDManager, long): Record
        + availableSize(): long
        + parseMap(String): float[]
        + prepare(Progress): void
        + {static} builder(): Builder
    }
}

@enduml